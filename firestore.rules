rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    //allow read : if request.auth.token.email.matches(".*ogres1v[.]lv");
    match /playlists/{docId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.uid && request.auth.token.firebase.sign_in_provider != 'anonymous';
      allow delete: if request.auth.uid != null && request.auth.uid == resource.data.uid;
    }
    match /skola/{docId} {
    	allow read: if request.auth.uid != null && request.auth.uid == get(/databases/$(database)/documents/skolotaji/$(request.auth.uid)).data.uid;
      allow create: if request.auth.uid != null && request.auth.token.firebase.sign_in_provider != 'anonymous' && request.auth.uid == request.resource.data.skolnieka_uid;
    }
    match /skolotaji/{docId} {
      allow read: if request.auth.uid != null ;
      allow create: if false;
    }
    match /vertejumi/{docId} {
      allow read: if request.auth.uid != null && request.auth.uid == get(/databases/$(database)/documents/skolotaji/$(request.auth.uid)).data.uid;
      allow create: if request.auth.uid != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
  }
}